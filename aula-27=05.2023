getwd()
library(e1071)

#coefiecente de Curtose

CK = kurtosis(dados)
CK

dados = c(18, 20, 20, 21, 22, 24, 25, 25, 26, 27, 29, 29, 
          30, 30, 31, 31, 32, 33, 34, 35, 36, 36, 37, 37, 
          37, 37, 38, 38, 38, 40, 41, 43, 44, 44, 45, 45, 
          45, 46, 47, 48, 49, 50, 51, 53, 54, 54, 56, 58, 62, 65)

#teste T

#extraindo dados do grupo 2
grupo_dois <- sleep$group == 2

View(sleep)

#H0: Os dados seguem a distruição normal - p>0.05
#H1: Os dados não seguem a distruição normal - p<0.05

sleep$group[grupo_dois]

sleep$group[!grupo_dois]

shapiro.test(sleep$extra[grupo_dois])
shapiro.test(sleep$extra[! grupo_dois])

teste_t <- t.test(extra ~ group, data = sleep, var.equal = TRUE)
teste_t

#teste F

#Hipóteses:

#H0 = mesma variância - p>0.05
#H1: Não possui a mesma variância- p<0.05


teste_f <- var.test(extra ~ group, data = sleep)
teste_f

#===============================================================================
#DPLYR

install.packages("dplyr")
library(dplyr)

  
df_sono <- read.csv("sono.csv")
View(df_sono)

str(df_sono)
summary(df_sono)

select
dados_sono2 <- select(df_sono, nome, sono_total)
dados_sono2

dados <- select(df_sono, nome:pais)
dados2 <- select(df_sono, 1:3)
dados

filter(df_sono, sono_total >= 16)
filter(df_sono, sono_total >= 16, peso >= 80)

dados <- df_sono %>%
      select(nome, pais, sono_total) %>%
      filter(sono_total >=16)
dados

